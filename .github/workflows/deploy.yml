name: "Deploy para VPS Windows"
on:
  push:
    branches:
      - main

jobs:
  build_deploy:
    runs-on: windows-latest

    steps:
      - name: "Baixar o c√≥digo"
        uses: actions/checkout@v4

      - name: "Verificar e configurar WinRM no servidor"
        run: |
          $user = "${{ secrets.EC2_USER }}"
          $password = ConvertTo-SecureString "${{ secrets.EC2_PASSWORD }}" -AsPlainText -Force
          $credential = New-Object System.Management.Automation.PSCredential ($user, $password)
          if (-not (Test-Path WSMan:\localhost\Client\TrustedHosts)) {
            New-Item -Path WSMan:\localhost\Client\TrustedHosts -Value '*'
          }
          Add-Content -Path WSMan:\localhost\Client\TrustedHosts -Value "${{ secrets.HOST_SERVER }}"
          Start-Service -Name WinRM
        shell: pwsh

      - name: "Copiar arquivos para o servidor Windows"
        run: |
          $user = "${{ secrets.EC2_USER }}"
          $password = ConvertTo-SecureString "${{ secrets.EC2_PASSWORD }}" -AsPlainText -Force
          $credential = New-Object System.Management.Automation.PSCredential ($user, $password)
          Invoke-Command -ComputerName "${{ secrets.HOST_SERVER }}" -Credential $credential -ScriptBlock {
            Copy-Item -Path "$env:GITHUB_WORKSPACE\*" -Destination "C:\xampp\htdocs" -Recurse -Force
          } -Authentication Basic -UseSSL
        shell: pwsh

      - name: "Executar comandos remotos via WinRM"
        run: |
          $user = "${{ secrets.EC2_USER }}"
          $password = ConvertTo-SecureString "${{ secrets.EC2_PASSWORD }}" -AsPlainText -Force
          $credential = New-Object System.Management.Automation.PSCredential ($user, $password)
          Invoke-Command -ComputerName "${{ secrets.HOST_SERVER }}" -Credential $credential -ScriptBlock {
            cd "C:\xampp\htdocs"
          } -Authentication Basic -UseSSL
        shell: pwsh
